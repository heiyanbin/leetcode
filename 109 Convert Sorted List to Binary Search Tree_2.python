// 109
// Convert Sorted List to Binary Search Tree
// https://leetcode.com//problems/convert-sorted-list-to-binary-search-tree/
# Definition for a  binary tree node
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
#
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    # @param head, a list node
    # @return a tree node
    def sortedListToBST(self, head):
        n, p = 0, head
        while p != None:
            n += 1;
            p = p.next
        self.start = head
        return self.__sortedListToBST(n)
    def __sortedListToBST(self, n):
        if n == 0: return None
        left = self.__sortedListToBST((n - 1) / 2);
        root = TreeNode(self.start.val)
        root.left = left
        self.start = self.start.next
        root.right = self.__sortedListToBST(n - 1 - (n - 1) / 2)
        return root
        
        